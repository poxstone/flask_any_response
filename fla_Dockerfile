#FROM alpine:3.16.0
FROM nginx:stable-alpine-perl

ENV PORT='8080'
# set 443 for load certs and test http2 local.poxsilver5.store
ENV NGINX_PORT='80'
ENV PROXY_HTTP_PORT='9191'
ENV PROXY_TCP_PORT='9090'
ENV GRPC_PORT='50051'
ENV PROXY_REDIRECT_HTTP_HOST='http://localhost:8080/'
ENV PROXY_REDIRECT_TCP_HOST='localhost:8080'
ENV UDP_PORT='5005'
ENV GUNICORN_MODULE='main'
ENV GUNICORN_CALLABLE='app'
ENV GUNICORN_USER='root'
ENV APP_PATH='/app'
ENV WORKERS='1'
ENV TIMEOUT='120'
ENV INIT_APP_TIME='0'
ENV VERSION_DEP='vp.0.0.2dock'
ENV UDP_PORT='5005'
ENV WEBSOCKET_PORT='5678'
ENV MSSQL_VERSION='18.5.1.1-1'
ENV SLEEP_TIME='0'
ENV LOGS_PRINT='true'
ENV LETS_TOKEN=''
ENV COOKIE_VAL='fla-key1,fla-value1,3600,,,,True,False,None'
# use it for rewrite ENTRYPOINT='stress-ng --cpu 1 -t 1m --vm-bytes 128M'
ENV CERTFILE_CRT='./.certs/tls.crt'
ENV KEYFILE_TLS='./.certs/tls.key'
ENV CHAIN_PEM='./.certs/chain.pem'

# Change entrypoint
ENV ENTRYPOINT=''

# for gcp Profiler
#ENV GOOGLE_CLOUD_PROJECT=''


RUN apk add --no-cache python3 ca-certificates\
    && apk add nmap mysql-client redis lsblk curl tcpdump tar tmux bind-tools busybox-extras stress-ng vim \
    && apk add py3-pip \
#    && apk add py3-gunicorn \
    && apk add py3-virtualenv
#    && adduser -D -h $APP_PATH $GUNICORN_USER

# add gcp profiler
RUN apk add python3-dev ca-certificates gcc build-base\
    && pip3 wheel --wheel-dir=/tmp/wheels google-cloud-profiler
    #&& apk add py3-grpcio \
    #&& pip3 install --no-index --find-links=/tmp/wheels google-cloud-profiler
    
# sqlcmd sql server client
WORKDIR /tmp
# Installing system utilities https://learn.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver16&tabs=alpine18-install%2Calpine17-install%2Cdebian8-install%2Credhat7-13-install%2Crhel7-offline
RUN apk add --no-cache curl gnupg --virtual .build-dependencies -- && \
    # Adding custom MS repository for mssql-tools and msodbcsql
    #Download the desired package(s)
    curl -O https://download.microsoft.com/download/fae28b9a-d880-42fd-9b98-d779f0fdd77f/msodbcsql18_${MSSQL_VERSION}_$architecture.apk && \
    curl -O https://download.microsoft.com/download/7/6/d/76de322a-d860-4894-9945-f0cc5d6a45f8/mssql-tools18_18.4.1.1-1_$architecture.apk && \
    #(Optional) Verify signature, if 'gpg' is missing install it using 'apk add gnupg':
    curl -O https://download.microsoft.com/download/fae28b9a-d880-42fd-9b98-d779f0fdd77f/msodbcsql18_${MSSQL_VERSION}_$architecture.sig && \
    curl -O https://download.microsoft.com/download/7/6/d/76de322a-d860-4894-9945-f0cc5d6a45f8/mssql-tools18_18.4.1.1-1_$architecture.sig && \
    curl https://packages.microsoft.com/keys/microsoft.asc  | gpg --import - && \
    gpg --verify msodbcsql18_${MSSQL_VERSION}_$architecture.sig msodbcsql18_${MSSQL_VERSION}_$architecture.apk && \
    gpg --verify mssql-tools18_18.4.1.1-1_$architecture.sig mssql-tools18_18.4.1.1-1_$architecture.apk && \
    #Install the package(s)
    sudo apk add --allow-untrusted msodbcsql18_${MSSQL_VERSION}_$architecture.apk && \
    sudo apk add --allow-untrusted mssql-tools18_${MSSQL_VERSION}_$architecture.apk && \
    # Deleting packages
    apk del .build-dependencies && rm -f msodbcsql*.sig mssql-tools*.apk && \
    ln -s /opt/mssql-tools/bin/sqlcmd /usr/bin/sqlcmd && ln -s /opt/mssql-tools/bin/bcp /usr/bin/bcp; \
    mkdir -p /etc/nginx/sites-enabled/ && mkdir -p /etc/nginx/sites-available/

COPY ./ $APP_PATH

RUN virtualenv /venv && source /venv/bin/activate && \
    pip install gunicorn && \
    pip install -r $APP_PATH/requirements.txt --upgrade

# config nginx
COPY ./nginx/nginx.conf /etc/nginx/nginx.conf
COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf
COPY ./nginx/default_ssl.conf /etc/nginx/conf.d/default_ssl.conf
COPY ./nginx/reverse-proxy.conf /etc/nginx/sites-available/reverse-proxy.conf
RUN ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/reverse-proxy.conf

EXPOSE $PORT
EXPOSE $PROXY_HTTP_PORT
EXPOSE ${PROXY_TCP_PORT}/tcp
EXPOSE ${PORT}/udp

USER $GUNICORN_USER
WORKDIR $APP_PATH
ENTRYPOINT sh $APP_PATH/entrypoint.sh
